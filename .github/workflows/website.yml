name: Deploy to Shared Hosting
on:
  push:
    branches:
      - testing
      - main
  workflow_dispatch:
jobs:
  deploy_testing:
    if: github.ref == 'refs/heads/testing'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install project dependencies
        run: npm install
      - name: Build React project
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build
      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp
      - name: Deploy to Shared Hosting using FTP
        env:
          FTP_USERNAME: ${{ secrets.STAGE_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.STAGE_FTP_PASSWORD }}
          FTP_HOST: ${{ secrets.STAGE_FTP_HOST }}
        run: |
          cd dist # Adjust this if your build output directory is different
          lftp -c "set ssl:verify-certificate no; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST; mirror -R -e -x .git/ ./"
      - name: Clean up
        run: echo "Clean up step"
  deploy_main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check deployment flag
        id: check-flag
        run: |
          DEPLOY_FLAG="on" # Set the flag here. Change to "yes" to enable deployment.
          echo "Deployment flag is set to: $DEPLOY_FLAG"
          if [ "$DEPLOY_FLAG" != "yes" ]; then
            echo "Deployment flag is not set to 'yes'. Skipping deployment."
            exit 0
          fi
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install project dependencies
        run: npm install
      - name: Build React project
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build
      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp
      - name: Deploy to Shared Hosting using FTP
        env:
          FTP_USERNAME: ${{ secrets.WEB_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.WEB_FTP_PASSWORD }}
          FTP_HOST: ${{ secrets.WEB_FTP_HOST }}
        run: |
          cd dist # Adjust this if your build output directory is different
          lftp -c "set ssl:verify-certificate no; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST; mirror -R -e -x .git/ ./"
      - name: Clean up
        run: echo "Clean up step"